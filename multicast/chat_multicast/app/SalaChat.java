/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import cliente.Cliente;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JEditorPane;
import javax.swing.JOptionPane;

/**
 *
 * @author sandu
 */
public class SalaChat extends javax.swing.JFrame {

    /**
     * Creates new form SalaChat
     */
    private Cliente cliente;
    private LinkedList<String> listaMensajes;
    private Thread t1;
    private boolean estado_hilo = true;
    private String nombreUsuario;
    public SalaChat(String nombre) {
        initComponents();
        nombreUsuario = nombre;
        jEditorPane2.setEditable(false);
        
        listaMensajes = new LinkedList<>();
        //se envia ip del grupo y puerto del cliente
        cliente = new Cliente(nombre, "230.1.1.1", 9999);
        //se envia objeto de sala al cliente por si es necesario realizar modificaciones
        cliente.setSalaChat(this);
        //se configura editorPane para que acepte etiquetas html
        jEditorPane2.setContentType("text/html");
        
        try {
            //se agrega mensaje de usuario agregado a la lista
            String auxInicio = cliente.iniciarConexion();
            cliente.enviarASala(auxInicio);
            //se obtiene lista de usuarios conectados
            //se genera un hilo para que se consulte de forma constante los mensajes
            //que han sido enviados por el servidor
            t1 = new Thread(new Runnable() {

                @Override
                public void run() {
                    //se hace un while infinito para siempre estar validando si hay mensaje entrantes
                    while (estado_hilo) {
                        String aux = cliente.recuperaMensaje();
                        /*
                        si el mensaje indica que un usuario esta entrando o saliendo se manda a llamar a funcion
                        que actualiza la lista de participantes
                        */
                        if(aux.contains("unido") || aux.contains("salido")){
                            System.out.println("si entra a update");
                            updateUsuarios();
                        }
                        //por alguna razon servidor manda cabecera del archivo serializado de la lista ligada
                        //por lo que si se encuentra el texto LinkedList el mensaje es ignorado
                        if(!aux.contains("LinkedList")){
                            listaMensajes.add(aux);
                        }
                        String mensaje = "";
                        for (String s : listaMensajes) {
                            mensaje += s;
                        }
                        //se actualiza Pane con todos los mensajes que se han recibido hasta el momento
                        jEditorPane2.setText(mensaje);                        
                    }
                }});
            t1.start();
            //se agrega nombre de usuario a la interfaz
            jLabel4.setText(nombre);



        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    /**
     * Funcion para actualizar los usuarios participantes en el chat en el Jlist
     */
    public void updateUsuarios(){
        LinkedList<String> us = cliente.updateLista();
        String [] aux = us.toArray(new String[us.size()]);
        for(String es: us){
            System.out.println(es);
        }
        lstUsuarios.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() {
                return aux.length;
            }

            public String getElementAt(int i) {
                return aux[i];
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstUsuarios = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        btnEnviar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtMensaje = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jEditorPane2 = new javax.swing.JEditorPane();
        jLabel4 = new javax.swing.JLabel();

        jScrollPane4.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lstUsuarios.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstUsuarios);

        jLabel1.setText("Mensaje");

        btnEnviar.setText("Enviar");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        jLabel2.setText("Usuarios");

        txtMensaje.setColumns(20);
        txtMensaje.setRows(5);
        jScrollPane3.setViewportView(txtMensaje);

        jLabel3.setText("Chat de:");

        jScrollPane5.setViewportView(jEditorPane2);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(btnEnviar))
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE))
                                .addGap(44, 44, 44))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane5))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEnviar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        /*
        se eliminan rastros del usuario en el cliente y servidor
        cuando se cierra la ventana del chat
        */
        try {
            t1.interrupt();
            estado_hilo = false;
            cliente.salir();
            Thread.currentThread().interrupt();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowClosing

    
  //extraer texto y enviar a sala principal
    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        String texto = txtMensaje.getText();
        if(!texto.equals("")){
            cliente.enviarASala(texto);
        }
        this.txtMensaje.setText("");
        this.repaint();
    }//GEN-LAST:event_btnEnviarActionPerformed

    private void lstUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstUsuariosMouseClicked
        /*
        si se da doble clic sobre un usuario de la lista se mandara llamar a la ventana
        chat privado
        */
        if(evt.getClickCount() == 2){
            String aux = lstUsuarios.getSelectedValue();
            if(!aux.equals(nombreUsuario)){
                new ChatPrivado(nombreUsuario,aux,this.cliente).setVisible(true);
            }
            
        }
    }//GEN-LAST:event_lstUsuariosMouseClicked

    //funcion no utilizada
    public JEditorPane getTextoSala(){
        return this.jEditorPane2;
    }
    
    //funcion no utilizada
    public void setTextoSala(JEditorPane jEditorPane2){
        this.jEditorPane2 = jEditorPane2;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnviar;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JEditorPane jEditorPane2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JList<String> lstUsuarios;
    private javax.swing.JTextArea txtMensaje;
    // End of variables declaration//GEN-END:variables
}
